from __future__ import annotations

from fastapi import APIRouter

from typing import List

from generated.dependencies import *

from generated.models import *

from aroma_lib import {{tag}}_impl

router = APIRouter(
    tags=['{{tag}}']
    )

{% for operation in operations %}
{% if operation.tags[0] == tag %}
@router.{{operation.type}}('{{operation.snake_case_path}}', response_model={{operation.response}}
    {% if operation.additional_responses %}
        , responses={
            {% for status_code, models in operation.additional_responses.items() %}
                '{{ status_code }}': {
                {% for key, model in models.items() %}
                    '{{ key }}': {{ model }}{% if not loop.last %},{% endif %}
                {% endfor %}
                }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    {% endif %}
    {% if operation.tags%}
    , tags={{operation.tags}}
    {% endif %})

def {{operation.function_name}}({{operation.snake_case_arguments}}) -> {{operation.return_type}}:

    {%- if operation.summary %}
    """
    {{ operation.summary }}

    """
    {%- endif %}


    {% if operation.return_type != 'None' %}
    result = {{tag}}_impl.{{operation.function_name}}(**locals())  # Call the internal function
    return result
    {% else %}
    {{tag}}_impl.{{operation.function_name}}(**locals())  # Call the internal function
    {% endif %}
    
{% endif %}
{% endfor %}
